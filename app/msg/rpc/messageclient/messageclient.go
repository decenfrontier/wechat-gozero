// Code generated by goctl. DO NOT EDIT!
// Source: msg.proto

package messageclient

import (
	"context"

	"github.com/wslynn/wechat-gozero/app/group/rpc/proto"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ChatMsg        = msg.ChatMsg
	PullRequest    = msg.PullRequest
	PullResponse   = msg.PullResponse
	UploadRequest  = msg.UploadRequest
	UploadResponse = msg.UploadResponse

	MessageClient interface {
		Upload(ctx context.Context, in *UploadRequest, opts ...grpc.CallOption) (*UploadResponse, error)
		Pull(ctx context.Context, in *PullRequest, opts ...grpc.CallOption) (*PullResponse, error)
	}

	defaultMessageClient struct {
		cli zrpc.Client
	}
)

func NewMessageClient(cli zrpc.Client) MessageClient {
	return &defaultMessageClient{
		cli: cli,
	}
}

func (m *defaultMessageClient) Upload(ctx context.Context, in *UploadRequest, opts ...grpc.CallOption) (*UploadResponse, error) {
	client := msg.NewMessageClientClient(m.cli.Conn())
	return client.Upload(ctx, in, opts...)
}

func (m *defaultMessageClient) Pull(ctx context.Context, in *PullRequest, opts ...grpc.CallOption) (*PullResponse, error) {
	client := msg.NewMessageClientClient(m.cli.Conn())
	return client.Pull(ctx, in, opts...)
}
